// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RealEstateAgency.Infra.Data.Contexts;

namespace RealEstateAgency.Infra.Data.Migrations
{
    [DbContext(typeof(RealEstateAgencyContext))]
    [Migration("20210513020820_RemoveFloatType")]
    partial class RemoveFloatType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("RealEstateAgency.Domain.Entities.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("date")
                        .HasColumnName("birthday");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<string>("SocialNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("social_number");

                    b.HasKey("Id")
                        .HasName("client_pk");

                    b.ToTable("client");
                });

            modelBuilder.Entity("RealEstateAgency.Domain.Entities.Property", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid")
                        .HasColumnName("client_id");

                    b.Property<decimal>("SaleValue")
                        .HasColumnType("numeric")
                        .HasColumnName("sale_value");

                    b.Property<int>("discriminator")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("property_pk");

                    b.HasIndex("ClientId")
                        .HasDatabaseName("property_client_id_ix");

                    b.ToTable("property");

                    b.HasDiscriminator<int>("discriminator");
                });

            modelBuilder.Entity("RealEstateAgency.Domain.Entities.Apartment", b =>
                {
                    b.HasBaseType("RealEstateAgency.Domain.Entities.Property");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("description");

                    b.Property<int>("Floor")
                        .HasColumnType("integer")
                        .HasColumnName("floor");

                    b.Property<bool>("HasElevator")
                        .HasColumnType("boolean")
                        .HasColumnName("has_elevator");

                    b.Property<bool>("HasFurtine")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("boolean")
                        .HasColumnName("has_furtine");

                    b.Property<int>("NumberOfBathrooms")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("integer")
                        .HasColumnName("number_of_bathrooms");

                    b.Property<int>("NumberOfBedrooms")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("integer")
                        .HasColumnName("number_of_bedrooms");

                    b.Property<int>("NumberOfGarage")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("integer")
                        .HasColumnName("number_of_garage");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("RealEstateAgency.Domain.Entities.House", b =>
                {
                    b.HasBaseType("RealEstateAgency.Domain.Entities.Property");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("description");

                    b.Property<bool>("HasFurtine")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("boolean")
                        .HasColumnName("has_furtine");

                    b.Property<int>("NumberOfBathrooms")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("integer")
                        .HasColumnName("number_of_bathrooms");

                    b.Property<int>("NumberOfBedrooms")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("integer")
                        .HasColumnName("number_of_bedrooms");

                    b.Property<int>("NumberOfGarage")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("integer")
                        .HasColumnName("number_of_garage");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("RealEstateAgency.Domain.Entities.Land", b =>
                {
                    b.HasBaseType("RealEstateAgency.Domain.Entities.Property");

                    b.Property<decimal>("Height")
                        .HasColumnType("numeric")
                        .HasColumnName("height");

                    b.Property<bool>("OnACorner")
                        .HasColumnType("boolean")
                        .HasColumnName("on_a_corner");

                    b.Property<decimal>("Width")
                        .HasColumnType("numeric")
                        .HasColumnName("width");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("RealEstateAgency.Domain.Entities.Property", b =>
                {
                    b.HasOne("RealEstateAgency.Domain.Entities.Client", "Client")
                        .WithMany("Properties")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("property_client_id_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("RealEstateAgency.Domain.Entities.Client", b =>
                {
                    b.Navigation("Properties");
                });
#pragma warning restore 612, 618
        }
    }
}
